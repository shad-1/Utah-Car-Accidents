
@model Crash;

@*Partial View for Crash quick info *@
<div class="my-4 p-relative card p-4">


    @*TODO: update with crash properties, maybe pull from layout of book summary card*@


    <div class="d-flex justify-content-between my-2 card-heading">
        <div>@Model.Location.Route - @Model.Location.Milepoint.ToString()</div>
        <div>@(Model.Location.RoadName ?? " ")</div>
    </div>

    <div class="d-flex justify-content-between my-2">
        <div>@Model.DateTime</div>
        <div>@(Model.Location.City ?? " "), @(Model.Location.County ?? " ")</div>
    </div>

    <div class="p-absolute text-center f-3">
        @Model.Severity
    </div>

    <div class="d-flex justify-content-betwen">
        <div class="chip-container">
            @foreach (PropertyInfo prop in Model.GetType().GetProperties())
            {
                @*todo: format this with colors. *@
                if (prop.PropertyType == typeof(bool) && prop.Equals(true))
                {
                    <div class="btn btn-disabled">
                        @prop
                    </div>
                }
            }
        </div>
        @if (ViewBag.IsAdmin)
        {
            //ONLY SHOW IF ADMIN
            <div class="btn-group align-baseline">
                <a class="btn btn-small btn-warning" asp-controller="Home" asp-action="Edit" asp-route-id="@Model.CrashId">Edit</a>
                <a class="btn btn-small btn-danger" asp-controller="Home" asp-action="Delete" asp-route-id="@Model.CrashId">Delete</a>
            </div>
        }
    </div>
</div>